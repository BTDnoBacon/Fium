export interface LogParams {
    [key: string]: unknown;
}
export declare class Logger {
    private clientKey;
    private customerKey;
    private gtid;
    constructor({ clientKey, customerKey, gtid, }: {
        clientKey: string;
        customerKey: string;
        gtid: string;
    });
    private requestLog;
    start(logParams: LogParams): void;
    processing(logParams: LogParams): void;
    fail(logParams: LogParams): void;
    wrap<T extends (...args: any[]) => any>(fn: T, methodName: string): T;
    wrapAsync<T extends (...args: any[]) => Promise<any>>(fn: T, methodName: string): T;
}
export declare function log(params?: LogParams): Promise<void>;
